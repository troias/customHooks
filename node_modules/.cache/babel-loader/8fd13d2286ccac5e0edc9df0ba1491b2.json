{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nexport const useCounter = type => {\n  _s();\n\n  const [counter, setCounter] = useState(0);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCounter(prevState => `${prevState} ${type} 1`);\n    }, [counter]);\n    return () => clearInterval(interval);\n  }, [counter, type]);\n\n  const counterType = type => {};\n\n  const positiveInterval = type => {\n    counterType(type);\n  };\n\n  const negativeInterval = type => {\n    counterType(type);\n  };\n\n  return [counter];\n};\n\n_s(useCounter, \"uPkTgB8PBsujXy6a5mXWSxFNaD8=\");","map":{"version":3,"sources":["/home/troias/udemy/project-5/01-starting-project/src/customHooks/counter.js"],"names":["React","useState","useEffect","useCounter","type","counter","setCounter","interval","setInterval","prevState","clearInterval","counterType","positiveInterval","negativeInterval"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAEA,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU;AAAA;;AAEhC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,CAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACX,UAAMK,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC/BF,MAAAA,UAAU,CAAEG,SAAD,IAAgB,GAAEA,SAAU,IAAGL,IAAK,IAArC,CAAV;AACH,KAF2B,EAEzB,CAACC,OAAD,CAFyB,CAA5B;AAGA,WAAO,MAAMK,aAAa,CAACH,QAAD,CAA1B;AACH,GALQ,EAKN,CAACF,OAAD,EAASD,IAAT,CALM,CAAT;;AASA,QAAMO,WAAW,GAAIP,IAAD,IAAU,CAE7B,CAFD;;AAIA,QAAMQ,gBAAgB,GAAIR,IAAD,IAAU;AAC/BO,IAAAA,WAAW,CAACP,IAAD,CAAX;AAEH,GAHD;;AAKA,QAAMS,gBAAgB,GAAIT,IAAD,IAAU;AAC/BO,IAAAA,WAAW,CAACP,IAAD,CAAX;AAEH,GAHD;;AAMA,SAAO,CAACC,OAAD,CAAP;AACH,CA7BM;;GAAMF,U","sourcesContent":["import React, {useState, useEffect} from 'react'\r\n\r\nexport const useCounter = (type) => {\r\n\r\n    const [counter, setCounter] = useState(0);\r\n\r\n    useEffect(() =>{\r\n        const interval = setInterval(() => {\r\n            setCounter((prevState) => `${prevState} ${type} 1`);\r\n        }, [counter]) \r\n        return () => clearInterval(interval)\r\n    }, [counter,type ])\r\n  \r\n\r\n\r\n    const counterType = (type) => {\r\n      \r\n    }\r\n\r\n    const positiveInterval = (type) => {\r\n        counterType(type)\r\n    \r\n    }\r\n\r\n    const negativeInterval = (type) => {\r\n        counterType(type)\r\n    \r\n    }\r\n\r\n\r\n    return [counter]\r\n}\r\n"]},"metadata":{},"sourceType":"module"}