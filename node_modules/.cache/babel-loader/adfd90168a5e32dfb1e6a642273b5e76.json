{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nexport const useCounter = type => {\n  _s();\n\n  // const [counter, setCounter] = useState(0);\n  // const positiveInterval = () => {\n  //     setInterval(() => {\n  //         setCounter((prevState) => prevState + 1);\n  //     }, 1000) \n  //     return clearInterval(interval);\n  // }\n  // const negativeInterval = () => {\n  //     setInterval(() => {\n  //         setCounter((prevState) => prevState - 1);\n  //     }, 1000) \n  //     return clearInterval(interval);\n  // }\n  // let interval = () => {\n  // }\n  // if (type === \"+\") {\n  //     interval = positiveInterval\n  // } else if (type === \"-\") {\n  //     interval = negativeInterval\n  // }\n  // useEffect(() =>{\n  //     interval()\n  //     return () => clearInterval(interval)\n  // }, [counter,type ])\n  // const [counter, setCounter] = useState(0);\n  const [counter] = useCounter(\"+\");\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCounter(prevCounter => prevCounter - 1);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const counterType = type => {};\n\n  return [counter];\n};\n\n_s(useCounter, \"dg8NRVRWR6KTW3ZHbZAyutggLFE=\", false, function () {\n  return [useCounter];\n});","map":{"version":3,"sources":["/home/troias/udemy/project-5/01-starting-project/src/customHooks/useCounter.js"],"names":["React","useState","useEffect","useCounter","type","counter","interval","setInterval","setCounter","prevCounter","clearInterval","counterType"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAEA,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU;AAAA;;AAEhC;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGE;AACJ,QAAM,CAACC,OAAD,IAAYF,UAAU,CAAC,GAAD,CAA5B;AAEED,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMI,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACnCC,MAAAA,UAAU,CAAEC,WAAD,IAAiBA,WAAW,GAAG,CAAhC,CAAV;AACC,KAF2B,EAEzB,IAFyB,CAA5B;AAIA,WAAO,MAAMC,aAAa,CAACJ,QAAD,CAA1B;AACH,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMK,WAAW,GAAIP,IAAD,IAAU,CAE7B,CAFD;;AAMA,SAAO,CAACC,OAAD,CAAP;AACH,CArDM;;GAAMF,U;UAoCOA,U","sourcesContent":["import React, {useState, useEffect} from 'react'\r\n\r\nexport const useCounter = (type) => {\r\n\r\n    // const [counter, setCounter] = useState(0);\r\n\r\n\r\n    // const positiveInterval = () => {\r\n    //     setInterval(() => {\r\n    //         setCounter((prevState) => prevState + 1);\r\n    //     }, 1000) \r\n    //     return clearInterval(interval);\r\n    // }\r\n\r\n    // const negativeInterval = () => {\r\n    //     setInterval(() => {\r\n    //         setCounter((prevState) => prevState - 1);\r\n    //     }, 1000) \r\n    //     return clearInterval(interval);\r\n    // }\r\n\r\n    // let interval = () => {\r\n\r\n    // }\r\n\r\n    // if (type === \"+\") {\r\n    //     interval = positiveInterval\r\n    // } else if (type === \"-\") {\r\n    //     interval = negativeInterval\r\n    // }\r\n\r\n    // useEffect(() =>{\r\n    //     interval()\r\n    //     return () => clearInterval(interval)\r\n    // }, [counter,type ])\r\n  \r\n\r\n      // const [counter, setCounter] = useState(0);\r\n  const [counter] = useCounter(\"+\")\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n        setCounter((prevCounter) => prevCounter - 1);\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    const counterType = (type) => {\r\n      \r\n    }\r\n\r\n    \r\n\r\n    return [counter]\r\n}\r\n"]},"metadata":{},"sourceType":"module"}